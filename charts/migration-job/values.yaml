image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

labels:
annotations:
  argocd.argoproj.io/hook: PreSync

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

command:
args:

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

backoffLimit: 0
restartPolicy: Never

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  #Key1: Value1
  #Key2: Value2

secretEnv:
  #Key3: Value3

# Add settings to istio sidecar
sidecar:
  enabled: false
  ingress:
  egress:
  inboundConnectionPool:
  outboundTrafficPolicy:

# Add settings to istio service entry
serviceEntry:
  enabled: true
  hosts: []
  ports: []
  location: MESH_EXTERNAL
  resolution: DNS
